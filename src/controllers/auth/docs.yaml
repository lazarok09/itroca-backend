openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0
paths:
  /auth/signin:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: string
                  example: testuser@hotmail.com
                password:
                  type: string
                  format: string
                  example: 123
              required:
                - email
                - password
      description: Auth handler to login / logout users
      responses:
        '200':
          headers:
            Set-Cookie:
              schema:
                type: string
                example: itrocatoken=Mdawkopkawdpoaw.mdawAWjeoiakiwo.DAwkmopiadw; Path=/; HttpOnly
          description: Returns a user and a token string.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '422':
          description: Generic error containg message and status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '400':
          description: Prisma error containg  message status prisma error and the error catch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrismaError'
  /auth/signout:
    post:
      security:
        - cookieAuth: []
      description: Auth handler to log out user
      responses:
        '200':
          description: Returns the invalid token.
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                  id":
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        '401':
          description: A invalid token was sent by client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '400':
          description: A error was catch or a expired token was sent by client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
  /auth/signup:
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: testuser

                email:
                  type: string
                  example: testuser@hotmail.com

                age:
                  type: integer
                  example: 18

                address:
                  type: string
                  example: Rua Emanuel do Teste

                password:
                  type: string
                  example: 123
                  required:
                    - name
                    - email
                    - age
                    - address
                    - password

      description: Auth handler to register user
      responses:
        '200':
          description: Returns a user with hash instead of plain text password.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '422':
          description: Generic error containg message and status.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericError'
        '400':
          description: Prisma error containg  message status prisma error and the error catch.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrismaError'
components:
  securitySchemes:
    cookieAuth: # arbitrary name for the security scheme
      type: apiKey
      in: cookie
      name: itrocatoken # optional, arbitrary value for documentation purposes
  schemas:
    UserWithToken:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        age:
          type: integer
        address:
          type: string
        token:
          type: string
    GenericError:
      type: object
      properties:
        message:
          type: string
          example: Ocorreu um erro ao {action}
        status:
          type: integer
          example: 422

    PrismaError:
      type: object
      properties:
        message:
          type: string
          example: Ocorreu um erro ao {action}
        prismaMessage:
          type: string
        status:
          type: integer
          example: 400
        error:
          type: object
